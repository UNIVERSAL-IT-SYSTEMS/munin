#!@@GOODSH@@
# -*- sh -*-

: << =cut

=head1 NAME

freeipmi_ - Plugin to monitor temperature or fan speed using FreeIPMI

=head1 CONFIGURATION

=head2 ENVIRONMENT VARIABLES

This plugin does not use environment variables

=head2 WILDCARD PLUGIN

This plugin should be linked as freeipmi_temp or freeipmi_fans, and
will show either temperatures or fan speeds based on its link name.

=head1 NOTE

=head1 AUTHOR

Diego Elio PettenÃ² <flameeyes@flameeyes.eu>
Based on the work of Nicolai Langfeldt <janl@linpro.no>

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf suggest

=cut

#### Parse commandline to determine what the job is

_ipmisensors() {
    ipmi-sensors \
	--quiet-cache \
	--comma-separated-output \
	--no-header-output \
	--ignore-not-available-sensors \
	"$@"
}

case $0 in
    *_temp|*_u_degrees_c)
	title="Temperatures"
	vlabel="degrees Celsius"
	type=Temperature
	unit=C
	;;
    *_fans|*_u_rpm)
	title="Fan speeds"
	vlabel="Rotations per Minute (RPM)"
	type=Fan
	unit=RPM
	;;
    *_power|*_u_watts)
	title="Power consumption"
	vlabel="Watts"
	type=Current
	unit=W
	;;
    *_current|*_u_amps)
	title="Current drain"
	vlabel="Amperes"
	type=Current
	unit=A
	;;
    *)
	if [ x"$1" != x"autoconf" -a x"$1" != x"suggest" ]; then
	    echo "Please invoke as one of the supported sensors types:" >&2
	    echo freeipmi_{temp,fans,power,current} >&2
	    exit 1
	fi
esac

case $1 in
    autoconf)
	if command -v ipmi-sensors >/dev/null 2>&1 ; then
	    echo 'no (missing ipmi-sensors command)'
	    exit 0
	fi

	if _ipmisensors -t OS_Boot >/dev/null 2>&1 ; then
	    echo 'no (unable to access IPMI device)'
	    exit 0
	fi

	echo yes
	exit 0
	;;
    suggest)
	_ipmisensors | awk -F, '
$3 == "Temperature" { print "temp"; }
$3 == "Fan" { print "fans"; }
$3 == "Current" && $5 == "W" { print "power"; }
$3 == "Current" && $5 == "A" { print "current"; }
'
	exit 0;;
    config)
	cat - <<EOF
graph_title ${title} based on IPMI sensors
graph_vlabel ${vlabel}
graph_category Sensors
EOF
	;;
esac

_ipmisensors -t ${type} | awk -F, -v CONFIG=$1 -v UNIT=$unit '
CONFIG == "config" && $5 == UNIT {
    printf("ipmi%s.label %s\n", $1, $2);
}

CONFIG != "config" && $5 == UNIT {
    printf("ipmi%s.value %s\n", $1, $4);
}

# This can only happen if FreeIPMI is new enough
CONFIG != "config" && $5 == UNIT && $NF == 12 {
    printf("ipmi%s.warning %s:%s\n", $8, $9);
    printf("ipmi%s.critical %s:%s\n", $7, $10);
}
'

# vim: syntax=sh ts=4 et
